{
  "// Set this to true to only publish MQTT messages for known devices":0,
  "only_known_devices": false,

  "// If a device's address is here, it'll be given a human-readable name":0,
  "known_devices" : {
    "c0:52:3f:50:42:c9" : "office",
    "f4:af:01:22:33:44" : {
      "name" : "band",

      "// skip advertise with a smaller signal":0,
      "min_rssi" : -80,

      "// disable merging and sending cached data to json topic":0,
      "cache_state": false
    },
    "a4:c1:55:66:77:88" : {
      "name" : "LYWSD03MMC",

      "// bind_key to decrypt the message":0,
      "bind_key" : "0B49A588B2B7122FDFB1661C323E52F1"
    },
    "8d:3d:aa:bb:cc:xx" : {
      "name" : "pvvx",
      "// How many seconds to wait for emitting a presence event, after latest time polled":0,
      "// Default is global presence_timeout or 60 seconds":0,
      "presence_timeout" : 1,

      "model": ""
    }
  },

  "// skip advertise with a smaller signal":0,
  "min_rssi" : -90,

  "// How many seconds to wait for a packet before considering BLE connection":0,
  "// broken and exiting. Higher values are useful with slowly advertising sensors.":0,
  "// Setting a value of 0 disables the exit/restart.":0,
  "ble_timeout": 20,

  "// How many seconds to wait for emitting a presence event, after latest time polled":0,
  "// Default is 60 seconds":0,
  "presence_timeout" : 30,

  "// Number of simultaneous bluetooth connection the device can handle (PI Zero=4)":0,
  "max_connections" : 4,

  "// How long to wait before we disconnect an inactive bluetooth device":0,
  "connection_timeout": 20,

  "// When a device sends data down a bluetooth 'notify' characteristic, should we keep the connection alive?":0,
  "connection_alive_on_notify": false,

  "// MQTT path for history requests and output. Default is Empty (to disable).":0,
  "//history_path": "/ble/hist/",

  "// We can add our own custom advertising UUIDs here with names to help decode them":0,
  "advertised_services" : {
    "ffff" : {
      "name" : "level"
    }
  },

  "// Make this nonzero to enable the HTTP server on the given port.":0,
  "// See README.md for more info on what it does":0,
  "http_port" : 1888,

  "// Set this to enable the HTTP proxy - it's off by default for safety":0,
  "// since it would be possible to spoof MAC addresses and use your":0,
  "// connection":0,
  "// NOTE: Some Bluetooth adaptors will cause the error: Command Disallowed (0xc)":0,
  "// when trying to connect if http_proxyis enabled.":0,
  "http_proxy" : false,

  "// If there are any addresses here, they are given access to the HTTP proxy":0,
  "http_whitelist" : [
    "e7:e0:57:ad:36:a2"
  ],
  "mqtt_host": "mqtt://localhost",
  "//mqtt_options": {
    "username": "user",
    "password": "pass",
    "clientId": "clientid"
  },

  "// Define the topic prefix under which the MQTT data will be posted. Defaults to /ble which is not adviced. For new installation, please activate the option below.":0,
  "//mqtt_prefix": "ble",

  "// These are the types of MQTT topics that are created":0,

  "// Send /ble/advertise/ad:dr:es:ss JSON with raw advertising data, as well as /ble/advertise/ad:dr:es:ss/rssi":0,
  "// This is used by the localhost:1888/ide service to detect devices":0,
  "mqtt_advertise": true,
  "// Send /ble/advertise/ad:dr:es:ss/manufacturer/uuid raw manufacturer data as well as decoded /ble/advertise/ad:dr:es:ss/json_key for json-formatted 0x0590 advertising data":0,
  "mqtt_advertise_manufacturer_data": false,
  "// Send /ble/advertise/ad:dr:es:ss/uuid raw service data":0,
  "mqtt_advertise_service_data": false,
  "// Send /ble/json/ad:dr:es:ss/uuid for decoded service data - REQUIRED FOR HOMEASSISTANT":0,
  "mqtt_format_json": true,
  "// Send /ble/service_name/ad:dr:es:ss for decoded service data":0,
  "mqtt_format_decoded_key_topic": true,

  "// Whether to enable Home Assistant integration":0,
  "homeassistant": true
}
